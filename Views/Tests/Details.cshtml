@model CETExamApp.Models.Test
@{
    ViewData["Title"] = "Test Details";
}

<div class="row justify-content-center">
    <div class="col-md-10">
        <div class="card shadow">
            <div class="card-header bg-info text-white">
                <h4 class="mb-0"><i class="bi bi-eye"></i> Test Details</h4>
            </div>
            <div class="card-body">
                
                <h5 class="mb-3">@Model.Title</h5>
                
                <div class="row mb-3">
                    <div class="col-md-6">
                        <strong>Class:</strong> @(Model.Class?.Name ?? "All Classes")
                    </div>
                    <div class="col-md-6">
                        <strong>Duration:</strong> @Model.DurationMinutes minutes
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-12">
                        <strong>Description:</strong> @Model.Description
                    </div>
                </div>

                <hr />

                <div class="row mb-3">
                    <div class="col-md-3">
                        <strong>Duration:</strong> @Model.DurationMinutes minutes
                    </div>
                    <div class="col-md-3">
                        <strong>Total Marks:</strong> @Model.TotalMarks
                    </div>
                    <div class="col-md-3">
                        <strong>Passing Marks:</strong> @Model.PassingMarks
                    </div>
                    <div class="col-md-3">
                        <strong>Status:</strong>
                        @switch (Model.Status)
                        {
                            case CETExamApp.Models.TestStatus.Draft:
                                <span class="badge bg-secondary">Draft</span>
                                break;
                            case CETExamApp.Models.TestStatus.Published:
                                <span class="badge bg-success">Published</span>
                                break;
                            case CETExamApp.Models.TestStatus.InProgress:
                                <span class="badge bg-warning">In Progress</span>
                                break;
                            case CETExamApp.Models.TestStatus.Completed:
                                <span class="badge bg-info">Completed</span>
                                break;
                            case CETExamApp.Models.TestStatus.Cancelled:
                                <span class="badge bg-danger">Cancelled</span>
                                break;
                        }
                    </div>
                </div>


                <hr />

                <h5 class="mb-3">Test Settings</h5>
                <div class="row mb-3">
                    <div class="col-md-4">
                        <i class="bi bi-@(Model.ShuffleQuestions ? "check-circle text-success" : "x-circle text-muted")"></i>
                        Shuffle Questions Per Student
                    </div>
                    <div class="col-md-4">
                        <i class="bi bi-@(Model.AllowLateSubmission ? "check-circle text-success" : "x-circle text-muted")"></i>
                        Allow Late Submission
                    </div>
                    <div class="col-md-4">
                        <i class="bi bi-@(Model.ShowResultsImmediately ? "check-circle text-success" : "x-circle text-muted")"></i>
                        Show Results Immediately
                    </div>
                </div>

                <hr />

                <h5 class="mb-3">Questions in Test (@(Model.TestQuestions?.Count ?? 0))</h5>
                @if (Model.TestQuestions?.Any() == true)
                {
                    <div class="table-responsive">
                        <table class="table table-sm table-striped">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Question</th>
                                    <th>Topic</th>
                                    <th>Type</th>
                                    <th>Difficulty</th>
                                    <th>Marks</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var tq in Model.TestQuestions.OrderBy(q => q.QuestionOrder))
                                {
                                    <tr>
                                        <td>@tq.QuestionOrder</td>
                                        <td>
                                            @if (tq.Question?.QuestionText.Length > 80)
                                            {
                                                @(tq.Question.QuestionText.Substring(0, 80) + "...")
                                            }
                                            else
                                            {
                                                @tq.Question?.QuestionText
                                            }
                                        </td>
                                        <td>@tq.Question?.Topic?.Name</td>
                                        <td>
                                            @switch (tq.Question?.QuestionType)
                                            {
                                                case CETExamApp.Models.QuestionType.MCQ:
                                                    <span class="badge bg-primary">MCQ</span>
                                                    break;
                                                case CETExamApp.Models.QuestionType.TrueFalse:
                                                    <span class="badge bg-success">T/F</span>
                                                    break;
                                                case CETExamApp.Models.QuestionType.MCQWithAllOfAbove:
                                                    <span class="badge bg-warning">MCQ (All)</span>
                                                    break;
                                            }
                                        </td>
                                        <td>
                                            @switch (tq.Question?.DifficultyLevel)
                                            {
                                                case CETExamApp.Models.DifficultyLevel.Easy:
                                                    <span class="badge bg-success">Easy</span>
                                                    break;
                                                case CETExamApp.Models.DifficultyLevel.Medium:
                                                    <span class="badge bg-warning">Medium</span>
                                                    break;
                                                case CETExamApp.Models.DifficultyLevel.Hard:
                                                    <span class="badge bg-danger">Hard</span>
                                                    break;
                                            }
                                        </td>
                                        <td>@tq.Marks</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="alert alert-warning">
                        No questions added to this test yet.
                    </div>
                }

                <div class="row mt-3">
                    <div class="col-md-4">
                        <strong>Created By:</strong> @Model.CreatedBy
                    </div>
                    <div class="col-md-4">
                        <strong>Created Date:</strong> @Model.CreatedDate.ToLocalTime().ToString("dd/MM/yyyy HH:mm")
                    </div>
                </div>

                <div class="d-flex justify-content-between mt-4">
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="bi bi-arrow-left"></i> Back to List
                    </a>
                    <div>
                        <a asp-action="AddQuestions" asp-route-id="@Model.Id" class="btn btn-success">
                            <i class="bi bi-list-check"></i> Manage Questions
                        </a>
                        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">
                            <i class="bi bi-pencil"></i> Edit
                        </a>
                        <a asp-controller="TestAllocations" asp-action="Allocate" asp-route-testId="@Model.Id" class="btn btn-primary">
                            <i class="bi bi-person-check"></i> Allocate
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

