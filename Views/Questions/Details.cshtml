@model CETExamApp.Models.Question
@using CETExamApp.Helpers
@{
    ViewData["Title"] = "Question Details";
}

<div class="row justify-content-center">
    <div class="col-md-10">
        <div class="card shadow">
            <div class="card-header bg-info text-white">
                <h4 class="mb-0"><i class="bi bi-eye"></i> Question Details</h4>
            </div>
            <div class="card-body">
                
                <div class="row mb-3">
                    <div class="col-md-6">
                        <strong>Topic:</strong> @Model.Topic?.Name (@Model.Topic?.Subject?.Name)
                    </div>
                    <div class="col-md-3">
                        <strong>Type:</strong> 
                        @switch (Model.QuestionType)
                        {
                            case CETExamApp.Models.QuestionType.MCQ:
                                <span class="badge bg-primary">MCQ</span>
                                break;
                            case CETExamApp.Models.QuestionType.TrueFalse:
                                <span class="badge bg-success">True/False</span>
                                break;
                            case CETExamApp.Models.QuestionType.MCQWithAllOfAbove:
                                <span class="badge bg-warning">MCQ (All of Above)</span>
                                break;
                        }
                    </div>
                    <div class="col-md-3">
                        <strong>Difficulty:</strong>
                        @switch (Model.DifficultyLevel)
                        {
                            case CETExamApp.Models.DifficultyLevel.Easy:
                                <span class="badge bg-success">Easy</span>
                                break;
                            case CETExamApp.Models.DifficultyLevel.Medium:
                                <span class="badge bg-warning">Medium</span>
                                break;
                            case CETExamApp.Models.DifficultyLevel.Hard:
                                <span class="badge bg-danger">Hard</span>
                                break;
                        }
                    </div>
                </div>

                <hr />

                <div class="mb-4">
                    <h5><i class="bi bi-question-circle"></i> Question:</h5>
                    <div class="border rounded p-3 bg-light">
                        @if (!string.IsNullOrEmpty(Model.QuestionText))
                        {
                            <div class="question-text">@Html.Raw(Model.QuestionText)</div>
                        }
                    </div>
                </div>

                @if (Model.QuestionType != CETExamApp.Models.QuestionType.TrueFalse)
                {
                    <div class="mb-4">
                        <h5><i class="bi bi-list-check"></i> Options:</h5>
                        <div class="list-group">
                            <div class="list-group-item @(Model.CorrectAnswer == "A" ? "list-group-item-success" : "")">
                                <strong>A.</strong> @Html.Raw(Model.OptionA)
                                @if (Model.CorrectAnswer == "A")
                                {
                                    <span class="badge bg-success float-end">Correct Answer</span>
                                }
                            </div>
                            <div class="list-group-item @(Model.CorrectAnswer == "B" ? "list-group-item-success" : "")">
                                <strong>B.</strong> @Html.Raw(Model.OptionB)
                                @if (Model.CorrectAnswer == "B")
                                {
                                    <span class="badge bg-success float-end">Correct Answer</span>
                                }
                            </div>
                            <div class="list-group-item @(Model.CorrectAnswer == "C" ? "list-group-item-success" : "")">
                                <strong>C.</strong> @Html.Raw(Model.OptionC)
                                @if (Model.CorrectAnswer == "C")
                                {
                                    <span class="badge bg-success float-end">Correct Answer</span>
                                }
                            </div>
                            <div class="list-group-item @(Model.CorrectAnswer == "D" ? "list-group-item-success" : "")">
                                <strong>D.</strong> 
                                @if (Model.QuestionType == CETExamApp.Models.QuestionType.MCQWithAllOfAbove)
                                {
                                    <text>All of the above</text>
                                }
                                else
                                {
                                    @Html.Raw(Model.OptionD)
                                }
                                @if (Model.CorrectAnswer == "D")
                                {
                                    <span class="badge bg-success float-end">Correct Answer</span>
                                }
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="mb-4">
                        <h5><i class="bi bi-check2-circle"></i> Correct Answer:</h5>
                        <div class="alert alert-success">
                            <strong>@Model.CorrectAnswer</strong>
                        </div>
                    </div>
                }

                @if (!string.IsNullOrEmpty(Model.Explanation))
                {
                    <div class="mb-4">
                        <h5><i class="bi bi-info-circle"></i> Explanation:</h5>
                        <div class="alert alert-info">
                            @Html.Raw(Model.Explanation)
                        </div>
                    </div>
                }

                <div class="row">
                    <div class="col-md-4">
                        <strong>Marks:</strong> @Model.Marks
                    </div>
                    <div class="col-md-4">
                        <strong>Created By:</strong> @Model.CreatedBy
                    </div>
                    <div class="col-md-4">
                        <strong>Created Date:</strong> @Model.CreatedDate.ToISTString() IST
                    </div>
                </div>

                <div class="d-flex justify-content-between mt-4">
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="bi bi-arrow-left"></i> Back to List
                    </a>
                    <div>
                        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">
                            <i class="bi bi-pencil"></i> Edit
                        </a>
                        <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">
                            <i class="bi bi-trash"></i> Delete
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
    <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
    <style>
        .question-text {
            white-space: pre-wrap;
            word-wrap: break-word;
        }
    </style>
}

